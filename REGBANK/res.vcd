$date
	Thu Sep 26 11:24:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module regbanktb $end
$var wire 9 ! dsr2 [8:0] $end
$var wire 9 " dsr1 [8:0] $end
$var reg 1 # clk $end
$var reg 9 $ din [8:0] $end
$var reg 4 % dr [3:0] $end
$var reg 4 & sr1 [3:0] $end
$var reg 4 ' sr2 [3:0] $end
$var reg 1 ( write $end
$var integer 32 ) i [31:0] $end
$scope module rb $end
$var wire 1 # clk $end
$var wire 9 * din [8:0] $end
$var wire 4 + dr [3:0] $end
$var wire 4 , sr1 [3:0] $end
$var wire 4 - sr2 [3:0] $end
$var wire 1 ( write $end
$var reg 9 . dsr1 [8:0] $end
$var reg 9 / dsr2 [8:0] $end
$var reg 9 0 r0 [8:0] $end
$var reg 9 1 r1 [8:0] $end
$var reg 9 2 r2 [8:0] $end
$var reg 9 3 r3 [8:0] $end
$var reg 9 4 r4 [8:0] $end
$var reg 9 5 r5 [8:0] $end
$var reg 9 6 r6 [8:0] $end
$var reg 9 7 r7 [8:0] $end
$var reg 9 8 r8 [8:0] $end
$var reg 9 9 r9 [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
b0 +
b100100100 *
b0 )
1(
bx '
bx &
b0 %
b100100100 $
0#
bx "
bx !
$end
#5
b100100100 !
b100100100 /
b100100100 "
b100100100 .
b100100100 0
1#
#10
0#
b10000001 $
b10000001 *
b1 %
b1 +
b1 )
#15
b10000001 1
1#
#20
0#
b1001 $
b1001 *
b10 %
b10 +
b10 )
#25
b1001 2
1#
#30
0#
b1100011 $
b1100011 *
b11 %
b11 +
b11 )
#35
b1100011 3
1#
#40
0#
b100001101 $
b100001101 *
b100 %
b100 +
b100 )
#45
b100001101 4
1#
#50
0#
b110001101 $
b110001101 *
b101 %
b101 +
b101 )
#55
b110001101 5
1#
#60
0#
b1100101 $
b1100101 *
b110 %
b110 +
b110 )
#65
b1100101 6
1#
#70
0#
b10010 $
b10010 *
b111 %
b111 +
b111 )
#75
b10010 7
1#
#80
0#
b100000001 $
b100000001 *
b1000 %
b1000 +
b1000 )
#85
b100000001 8
1#
#90
0#
b100001101 $
b100001101 *
b1001 %
b1001 +
b1001 )
#95
b100001101 9
1#
#100
0#
b0 &
b0 ,
0(
b0 )
#105
1#
#110
b10000001 "
b10000001 .
0#
b1 &
b1 ,
b1 )
#115
1#
#120
b1001 "
b1001 .
0#
b10 &
b10 ,
b10 )
#125
1#
#130
b1100011 "
b1100011 .
0#
b11 &
b11 ,
b11 )
#135
1#
#140
b100001101 "
b100001101 .
0#
b100 &
b100 ,
b100 )
#145
1#
#150
b110001101 "
b110001101 .
0#
b101 &
b101 ,
b101 )
#155
1#
#160
b1100101 "
b1100101 .
0#
b110 &
b110 ,
b110 )
#165
1#
#170
b10010 "
b10010 .
0#
b111 &
b111 ,
b111 )
#175
1#
#180
b100000001 "
b100000001 .
0#
b1000 &
b1000 ,
b1000 )
#185
1#
#190
b100001101 "
b100001101 .
0#
b1001 &
b1001 ,
b1001 )
#195
1#
#200
0#
b0 '
b0 -
b0 )
#205
1#
#210
b10000001 !
b10000001 /
0#
b1 '
b1 -
b1 )
#215
1#
#220
b1001 !
b1001 /
0#
b10 '
b10 -
b10 )
#225
1#
#230
b1100011 !
b1100011 /
0#
b11 '
b11 -
b11 )
#235
1#
#240
b100001101 !
b100001101 /
0#
b100 '
b100 -
b100 )
#245
1#
#250
b110001101 !
b110001101 /
0#
b101 '
b101 -
b101 )
#255
1#
#260
b1100101 !
b1100101 /
0#
b110 '
b110 -
b110 )
#265
1#
#270
b10010 !
b10010 /
0#
b111 '
b111 -
b111 )
#275
1#
#280
b100000001 !
b100000001 /
0#
b1000 '
b1000 -
b1000 )
#285
1#
#290
b100001101 !
b100001101 /
0#
b1001 '
b1001 -
b1001 )
#295
1#
#300
0#
b1010 )
#305
1#
#310
0#
#315
1#
#320
0#
#325
1#
#330
0#
#335
1#
#340
0#
#345
1#
#350
0#
#355
1#
#360
0#
#365
1#
#370
0#
#375
1#
#380
0#
#385
1#
#390
0#
#395
1#
#400
0#
