$date
	Sat Sep 21 13:21:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! sel_in $end
$var wire 1 " sel2 $end
$var wire 1 # sel1 $end
$var wire 1 $ lt $end
$var wire 1 % ldB $end
$var wire 1 & ldA $end
$var wire 1 ' gt $end
$var wire 1 ( eq $end
$var wire 1 ) done $end
$var reg 1 * clk $end
$var reg 16 + data_in [15:0] $end
$var reg 1 , start $end
$scope module CON $end
$var wire 1 * clk $end
$var wire 1 , start $end
$var wire 1 $ lt $end
$var wire 1 ' gt $end
$var wire 1 ( eq $end
$var parameter 3 - S0 $end
$var parameter 3 . S1 $end
$var parameter 3 / S2 $end
$var parameter 3 0 S3 $end
$var parameter 3 1 S4 $end
$var parameter 3 2 S5 $end
$var reg 1 ) done $end
$var reg 1 & ldA $end
$var reg 1 % ldB $end
$var reg 1 # sel1 $end
$var reg 1 " sel2 $end
$var reg 1 ! sel_in $end
$var reg 3 3 state [2:0] $end
$upscope $end
$scope module DP $end
$var wire 1 * clk $end
$var wire 16 4 data_in [15:0] $end
$var wire 1 & ldA $end
$var wire 1 % ldB $end
$var wire 1 # sel1 $end
$var wire 1 " sel2 $end
$var wire 1 ! sel_in $end
$var wire 1 $ lt $end
$var wire 1 ' gt $end
$var wire 1 ( eq $end
$var wire 16 5 Y [15:0] $end
$var wire 16 6 X [15:0] $end
$var wire 16 7 SubOut [15:0] $end
$var wire 16 8 Bus [15:0] $end
$var wire 16 9 Bout [15:0] $end
$var wire 16 : Aout [15:0] $end
$scope module A $end
$var wire 1 * clk $end
$var wire 1 & load $end
$var wire 16 ; data_in [15:0] $end
$var reg 16 < data_out [15:0] $end
$upscope $end
$scope module B $end
$var wire 1 * clk $end
$var wire 1 % load $end
$var wire 16 = data_in [15:0] $end
$var reg 16 > data_out [15:0] $end
$upscope $end
$scope module COMP $end
$var wire 16 ? data1 [15:0] $end
$var wire 16 @ data2 [15:0] $end
$var wire 1 $ lt $end
$var wire 1 ' gt $end
$var wire 1 ( eq $end
$upscope $end
$scope module MUX_in1 $end
$var wire 16 A in0 [15:0] $end
$var wire 16 B in1 [15:0] $end
$var wire 1 # sel $end
$var wire 16 C out [15:0] $end
$upscope $end
$scope module MUX_in2 $end
$var wire 16 D in0 [15:0] $end
$var wire 16 E in1 [15:0] $end
$var wire 1 " sel $end
$var wire 16 F out [15:0] $end
$upscope $end
$scope module MUX_load $end
$var wire 16 G in1 [15:0] $end
$var wire 1 ! sel $end
$var wire 16 H out [15:0] $end
$var wire 16 I in0 [15:0] $end
$upscope $end
$scope module SB $end
$var wire 16 J in1 [15:0] $end
$var wire 16 K in2 [15:0] $end
$var reg 16 L out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 2
b100 1
b11 0
b10 /
b1 .
b0 -
$end
#0
$dumpvars
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
x,
bx +
0*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#3
1,
#4
b10001111 +
b10001111 4
b10001111 G
#5
b10001111 8
b10001111 ;
b10001111 =
b10001111 H
0)
0%
1&
1!
b0 3
1*
#10
0*
#14
b1001110 8
b1001110 ;
b1001110 =
b1001110 H
b1001110 +
b1001110 4
b1001110 G
#15
1%
0&
b1 3
b1001110 :
b1001110 <
b1001110 ?
b1001110 A
b1001110 D
1*
#20
0*
#25
b0 7
b0 I
b0 L
b1001110 6
b1001110 C
b1001110 J
b1001110 5
b1001110 F
b1001110 K
1)
0$
0'
1(
b1001110 9
b1001110 >
b1001110 @
b1001110 B
b1001110 E
b10 3
1*
#30
0*
#35
1*
#37
b0 8
b0 ;
b0 =
b0 H
0%
0!
0"
0#
b101 3
#40
0*
#45
1*
#50
0*
#55
1*
#60
0*
#65
1*
#70
0*
#75
1*
#80
0*
#85
1*
#90
0*
#95
1*
#100
0*
#105
1*
#110
0*
#115
1*
#120
0*
#125
1*
#130
0*
#135
1*
#140
0*
#145
1*
#150
0*
#155
1*
#160
0*
#165
1*
#170
0*
#175
1*
#180
0*
#185
1*
#190
0*
#195
1*
#200
0*
#205
1*
#210
0*
#215
1*
#220
0*
#225
1*
#230
0*
#235
1*
#240
0*
#245
1*
#250
0*
#255
1*
#260
0*
#265
1*
#270
0*
#275
1*
#280
0*
#285
1*
#290
0*
#295
1*
#300
0*
#305
1*
#310
0*
#315
1*
#320
0*
#325
1*
#330
0*
#335
1*
#340
0*
#345
1*
#350
0*
#355
1*
#360
0*
#365
1*
#370
0*
#375
1*
#380
0*
#385
1*
#390
0*
#395
1*
#400
0*
#405
1*
#410
0*
#415
1*
#420
0*
#425
1*
#430
0*
#435
1*
#440
0*
#445
1*
#450
0*
#455
1*
#460
0*
#465
1*
#470
0*
#475
1*
#480
0*
#485
1*
#490
0*
#495
1*
#500
0*
#505
1*
#510
0*
#515
1*
#520
0*
#525
1*
#530
0*
#535
1*
#540
0*
#545
1*
#550
0*
#555
1*
#560
0*
#565
1*
#570
0*
#575
1*
#580
0*
#585
1*
#590
0*
#595
1*
#600
0*
#605
1*
#610
0*
#615
1*
#620
0*
#625
1*
#630
0*
#635
1*
#640
0*
#645
1*
#650
0*
#655
1*
#660
0*
#665
1*
#670
0*
#675
1*
#680
0*
#685
1*
#690
0*
#695
1*
#700
0*
#705
1*
#710
0*
#715
1*
#720
0*
#725
1*
#730
0*
#735
1*
#740
0*
#745
1*
#750
0*
#755
1*
#760
0*
#765
1*
#770
0*
#775
1*
#780
0*
#785
1*
#790
0*
#795
1*
#800
0*
#805
1*
#810
0*
#815
1*
#820
0*
#825
1*
#830
0*
#835
1*
#840
0*
#845
1*
#850
0*
#855
1*
#860
0*
#865
1*
#870
0*
#875
1*
#880
0*
#885
1*
#890
0*
#895
1*
#900
0*
#905
1*
#910
0*
#915
1*
#920
0*
#925
1*
#930
0*
#935
1*
#940
0*
#945
1*
#950
0*
#955
1*
#960
0*
#965
1*
#970
0*
#975
1*
#980
0*
#985
1*
#990
0*
#995
1*
#1000
0*
#1003
